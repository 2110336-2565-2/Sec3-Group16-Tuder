version: '3.7'

networks:
  tuder: {}

services:
  database:
    image: postgres:15
    restart: always 
    volumes:
      - database-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tuder
      POSTGRES_USER: user
    ports:
      - 5432:5432
    networks:
      - tuder

  frontend:
    build: ./Frontend
    restart: always
    ports:
      - 3000:${vars.PORT}
    depends_on:
      - backend
    # env_file:
    #   - ./Frontend/.env
    environment:
      PORT: ${vars.PORT}
      REACT_APP_API_URL: ${vars.REACT_APP_API_URL}
      REACT_APP_OMISE_PUBLIC_KEY: ${vars.REACT_APP_OMISE_PUBLIC_KEY}
    networks:
      - tuder


  backend:
    build: ./Backend
    restart: always
    ports:
      - 8080:${vars.SERVER_PORT}
    depends_on:
      - database
    # env_file:
    #   - ./Backend/.env
    environment:
      MODE: ${vars.MODE}
      SERVER_PORT: ${vars.SERVER_PORT}
      SERVER_HOST: ${vars.SERVER_HOST}
      DB_USER: ${vars.DB_USER}
      DB_PASSWORD: ${vars.DB_PASSWORD}
      DB_NAME: ${vars.DB_NAME}
      DB_PORT: ${vars.DB_PORT}
      JWT_SECRET: ${vars.JWT_SECRET}
      JWT_EXPIRES_MINUTES: ${vars.JWT_EXPIRES_MINUTES}
      FRONTEND_URL: ${vars.FRONTEND_URL}
      AWS_REGION: ${vars.AWS_REGION}
      AWS_ACCESS_KEY_ID: ${vars.AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${vars.AWS_SECRET_ACCESS_KEY}
      OMISE_PUBLIC_KEY: ${vars.OMISE_PUBLIC_KEY}
      OMISE_SECRET_KEY: ${vars.OMISE_SECRET_KEY}
    
    networks:
      - tuder

    

volumes:
  database-storage:


