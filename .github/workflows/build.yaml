name: Tuder GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: 
  push:
    branches:
      - docker-file
env:
  <<: ${{ secrets }}
  <<: ${{ vars }}

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.import-env.outputs.result }}

    steps:
    - uses: actions/checkout@v2

    - name: Import environment variables from a file
      id: import-env
      uses: actions/github-script@v2
      with:
        script: |
          const env = parseEnv(`${process.env.GITHUB_WORKSPACE}/dev.env`);
          Object.entries(env).forEach(x => core.exportVariable(...x)); // current job-level env
          return env;

    - name: Print environment variable
      run: echo $ABC
      env: ${{ fromJson(steps.import-env.outputs.result) }} # step-level env

  initialize-the-application:
    runs-on: ubuntu-latest
    needs: [env]

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      # pull from git
      - name: Pull from git
        uses: actions/checkout@v3
        with:
          repository:  ${{ github.repository }}
          ref: 'docker-file'
          path: 'tuder'
      - run: ls ${{ github.workspace }}
      - name: Docker compose up
        run: |
          docker-compose up -d
      - run: echo "🍏 This job's status is ${{ job.status }}."

      