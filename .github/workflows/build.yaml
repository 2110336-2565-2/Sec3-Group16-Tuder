name: Tuder GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
    branches:
      - docker-file
jobs:
  initialize-the-application:
    runs-on: ubuntu-latest
    env:
      MODE: ${vars.MODE}
      SERVER_PORT: ${vars.SERVER_PORT}
      SERVER_HOST: ${vars.SERVER_HOST}
      DB_USER: ${vars.DB_USER}
      DB_PASSWORD: ${vars.DB_PASSWORD}
      DB_NAME: ${vars.DB_NAME}
      DB_PORT: ${vars.DB_PORT}
      JWT_SECRET: ${vars.JWT_SECRET}
      JWT_EXPIRES_MINUTES: ${vars.JWT_EXPIRES_MINUTES}
      FRONTEND_URL: ${vars.FRONTEND_URL}
      AWS_REGION: ${vars.AWS_REGION}
      AWS_ACCESS_KEY_ID: ${vars.AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${vars.AWS_SECRET_ACCESS_KEY}
      OMISE_PUBLIC_KEY: ${vars.OMISE_PUBLIC_KEY}
      OMISE_SECRET_KEY: ${vars.OMISE_SECRET_KEY}
        #  -------------------
      PORT: ${vars.PORT}
      REACT_APP_API_URL: ${vars.REACT_APP_API_URL}
      REACT_APP_OMISE_PUBLIC_KEY: ${vars.REACT_APP_OMISE_PUBLIC_KEY}

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Print all env
        run: |
          echo ${{ env.MODE }}
          echo ${{ env.SERVER_PORT }}
          echo ${{ env.SERVER_HOST }}
          echo ${{ env.DB_USER }}
          echo ${{ env.DB_PASSWORD }}
          echo ${{ env.DB_NAME }}
          echo ${{ env.DB_PORT }}
          echo ${{ env.JWT_SECRET }}
          echo ${{ env.JWT_EXPIRES_MINUTES }}
          echo ${{ env.FRONTEND_URL }}
          echo ${{ env.AWS_REGION }}
          echo ${{ env.AWS_ACCESS_KEY_ID }}
          echo ${{ env.AWS_SECRET_ACCESS_KEY }}
          echo ${{ env.OMISE_PUBLIC_KEY }}
          echo ${{ env.OMISE_SECRET_KEY }}
          echo ${{ env.PORT }}
          echo ${{ env.REACT_APP_API_URL }}
          echo ${{ env.REACT_APP_OMISE_PUBLIC_KEY }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      # pull from git
      - name: Pull from git
        uses: actions/checkout@v3
        with:
          repository:  ${{ github.repository }}
          ref: 'docker-file'
          path: 'tuder'
      - run: ls ${{ github.workspace }}
      - name: Docker compose up
        run: |
          docker-compose up -d
      - run: echo "üçè This job's status is ${{ job.status }}."

      