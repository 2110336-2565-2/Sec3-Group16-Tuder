// Code generated by ent, DO NOT EDIT.

package reviewcourse

const (
	// Label holds the string label denoting the reviewcourse type in the database.
	Label = "review_course"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldScore holds the string denoting the score field in the database.
	FieldScore = "score"
	// FieldReviewMsg holds the string denoting the review_msg field in the database.
	FieldReviewMsg = "review_msg"
	// EdgeCourse holds the string denoting the course edge name in mutations.
	EdgeCourse = "course"
	// Table holds the table name of the reviewcourse in the database.
	Table = "review_courses"
	// CourseTable is the table that holds the course relation/edge.
	CourseTable = "review_courses"
	// CourseInverseTable is the table name for the Course entity.
	// It exists in this package in order to avoid circular dependency with the "course" package.
	CourseInverseTable = "courses"
	// CourseColumn is the table column denoting the course relation/edge.
	CourseColumn = "course_review_course"
)

// Columns holds all SQL columns for reviewcourse fields.
var Columns = []string{
	FieldID,
	FieldScore,
	FieldReviewMsg,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "review_courses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"course_review_course",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	ScoreValidator func(float32) error
)
